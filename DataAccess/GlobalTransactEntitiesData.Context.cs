//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GlobalTransactEntitiesData : DbContext
    {
        public GlobalTransactEntitiesData()
            : base("name=GlobalTransactEntitiesData")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Agent> Agents { get; set; }
        public virtual DbSet<AgentAccount> AgentAccounts { get; set; }
        public virtual DbSet<AgentComission> AgentComissions { get; set; }
        public virtual DbSet<AgentsData> AgentsDatas { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomerLedger> CustomerLedgers { get; set; }
        public virtual DbSet<CustomerService> CustomerServices { get; set; }
        public virtual DbSet<CustomerTransaction> CustomerTransactions { get; set; }
        public virtual DbSet<CustomerWallet> CustomerWallets { get; set; }
        public virtual DbSet<EligibleCustomer> EligibleCustomers { get; set; }
        public virtual DbSet<Loan> Loans { get; set; }
        public virtual DbSet<LoanBank> LoanBanks { get; set; }
        public virtual DbSet<LoanEmployeeInfo> LoanEmployeeInfoes { get; set; }
        public virtual DbSet<LoanSocial> LoanSocials { get; set; }
        public virtual DbSet<Merchant> Merchants { get; set; }
        public virtual DbSet<MerchantServiceType> MerchantServiceTypes { get; set; }
        public virtual DbSet<Pag> Pags { get; set; }
        public virtual DbSet<PageAuthentication> PageAuthentications { get; set; }
        public virtual DbSet<pageHeader> pageHeaders { get; set; }
        public virtual DbSet<PagePermission> PagePermissions { get; set; }
        public virtual DbSet<PaymentLog> PaymentLogs { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<ServiceCategory> ServiceCategories { get; set; }
        public virtual DbSet<StartimeBouquet> StartimeBouquets { get; set; }
        public virtual DbSet<StartimeServiceList> StartimeServiceLists { get; set; }
        public virtual DbSet<StartimesService> StartimesServices { get; set; }
        public virtual DbSet<SubAgentTransaction> SubAgentTransactions { get; set; }
        public virtual DbSet<TransactionLog> TransactionLogs { get; set; }
        public virtual DbSet<TransactionStatu> TransactionStatus { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<MarketingChannel> MarketingChannels { get; set; }
        public virtual DbSet<MarketingDetail> MarketingDetails { get; set; }
        public virtual DbSet<TransactionRecord> TransactionRecords { get; set; }
        public virtual DbSet<AgentUser> AgentUsers { get; set; }
        public virtual DbSet<ServiceType> ServiceTypes { get; set; }
    
        public virtual ObjectResult<Nullable<double>> GetAgentAcountBalance(Nullable<int> agentUserID)
        {
            var agentUserIDParameter = agentUserID.HasValue ?
                new ObjectParameter("AgentUserID", agentUserID) :
                new ObjectParameter("AgentUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("GetAgentAcountBalance", agentUserIDParameter);
        }
    
        public virtual ObjectResult<GetAgentsDataByUserID_Result> GetAgentsDataByUserID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAgentsDataByUserID_Result>("GetAgentsDataByUserID", userIDParameter);
        }
    
        public virtual ObjectResult<GetAgentsFundings_Result> GetAgentsFundings(string startDate, string endDate, Nullable<int> userID)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAgentsFundings_Result>("GetAgentsFundings", startDateParameter, endDateParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetAgentsTransactions_Result> GetAgentsTransactions(string startDate, string endDate, Nullable<int> userID)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAgentsTransactions_Result>("GetAgentsTransactions", startDateParameter, endDateParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetAgentSummaryReport_Result> GetAgentSummaryReport(Nullable<int> userID, string startDate, string endDate)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAgentSummaryReport_Result>("GetAgentSummaryReport", userIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetAgentUserBySubAgentUserID_Result> GetAgentUserBySubAgentUserID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAgentUserBySubAgentUserID_Result>("GetAgentUserBySubAgentUserID", userIDParameter);
        }
    
        public virtual ObjectResult<GetAllAgentsDataByPowerNowAdmin_Result> GetAllAgentsDataByPowerNowAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAgentsDataByPowerNowAdmin_Result>("GetAllAgentsDataByPowerNowAdmin");
        }
    
        public virtual ObjectResult<GetAllAgentsTransactionLogs_Result> GetAllAgentsTransactionLogs(string startDate, string endDate, Nullable<int> agentUserID, Nullable<int> userID)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var agentUserIDParameter = agentUserID.HasValue ?
                new ObjectParameter("AgentUserID", agentUserID) :
                new ObjectParameter("AgentUserID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAgentsTransactionLogs_Result>("GetAllAgentsTransactionLogs", startDateParameter, endDateParameter, agentUserIDParameter, userIDParameter);
        }
    
        public virtual int GetAllAgentsTransactionLogsByCustomerID(string startDate, string endDate, string customerID, Nullable<int> userID)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("customerID", customerID) :
                new ObjectParameter("customerID", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetAllAgentsTransactionLogsByCustomerID", startDateParameter, endDateParameter, customerIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetAllAgentsTransactionLogsByDateRange_Result> GetAllAgentsTransactionLogsByDateRange(string startDate, string endDate, Nullable<int> merchantID, Nullable<int> userID)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAgentsTransactionLogsByDateRange_Result>("GetAllAgentsTransactionLogsByDateRange", startDateParameter, endDateParameter, merchantIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetAllAgentsTransactions4ReceiptByDateRange_Result> GetAllAgentsTransactions4ReceiptByDateRange(string startDate, string endDate, Nullable<int> merchantID, Nullable<int> userID)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAgentsTransactions4ReceiptByDateRange_Result>("GetAllAgentsTransactions4ReceiptByDateRange", startDateParameter, endDateParameter, merchantIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetAllAgentsTransactionsByDateRange_Result> GetAllAgentsTransactionsByDateRange(string customerID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("customerID", customerID) :
                new ObjectParameter("customerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAgentsTransactionsByDateRange_Result>("GetAllAgentsTransactionsByDateRange", customerIDParameter);
        }
    
        public virtual int GetEKEDC_MeterDetails(Nullable<int> meterType, string customerid)
        {
            var meterTypeParameter = meterType.HasValue ?
                new ObjectParameter("meterType", meterType) :
                new ObjectParameter("meterType", typeof(int));
    
            var customeridParameter = customerid != null ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetEKEDC_MeterDetails", meterTypeParameter, customeridParameter);
        }
    
        public virtual ObjectResult<GetLendTransLog4PartnersByDate_Result> GetLendTransLog4PartnersByDate(Nullable<int> userFK, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userFKParameter = userFK.HasValue ?
                new ObjectParameter("UserFK", userFK) :
                new ObjectParameter("UserFK", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLendTransLog4PartnersByDate_Result>("GetLendTransLog4PartnersByDate", userFKParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetMerchantComissionByAgentID_Result> GetMerchantComissionByAgentID(string agentID, Nullable<int> merchantFK)
        {
            var agentIDParameter = agentID != null ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(string));
    
            var merchantFKParameter = merchantFK.HasValue ?
                new ObjectParameter("MerchantFK", merchantFK) :
                new ObjectParameter("MerchantFK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMerchantComissionByAgentID_Result>("GetMerchantComissionByAgentID", agentIDParameter, merchantFKParameter);
        }
    
        public virtual ObjectResult<GetPartnersBalances_Result> GetPartnersBalances(string endDate)
        {
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPartnersBalances_Result>("GetPartnersBalances", endDateParameter);
        }
    
        public virtual ObjectResult<GetPartnerSummaryDetails_Result> GetPartnerSummaryDetails(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> user_FK)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var user_FKParameter = user_FK.HasValue ?
                new ObjectParameter("User_FK", user_FK) :
                new ObjectParameter("User_FK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPartnerSummaryDetails_Result>("GetPartnerSummaryDetails", startDateParameter, endDateParameter, user_FKParameter);
        }
    
        public virtual ObjectResult<GetSalesMarginLog4PartnersByDate_Result> GetSalesMarginLog4PartnersByDate(Nullable<int> userFK, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userFKParameter = userFK.HasValue ?
                new ObjectParameter("UserFK", userFK) :
                new ObjectParameter("UserFK", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesMarginLog4PartnersByDate_Result>("GetSalesMarginLog4PartnersByDate", userFKParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetSubAgentBalance_Result> GetSubAgentBalance(Nullable<int> agentUser_FK)
        {
            var agentUser_FKParameter = agentUser_FK.HasValue ?
                new ObjectParameter("AgentUser_FK", agentUser_FK) :
                new ObjectParameter("AgentUser_FK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubAgentBalance_Result>("GetSubAgentBalance", agentUser_FKParameter);
        }
    
        public virtual ObjectResult<GetSuccesfulTransLog4PartnersByDate_Result> GetSuccesfulTransLog4PartnersByDate(Nullable<int> userFK, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> merchantID)
        {
            var userFKParameter = userFK.HasValue ?
                new ObjectParameter("UserFK", userFK) :
                new ObjectParameter("UserFK", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuccesfulTransLog4PartnersByDate_Result>("GetSuccesfulTransLog4PartnersByDate", userFKParameter, startDateParameter, endDateParameter, merchantIDParameter);
        }
    
        public virtual ObjectResult<GetTransactionByCustomerIDandDateRange_Result> GetTransactionByCustomerIDandDateRange(Nullable<int> userFK, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string customerID)
        {
            var userFKParameter = userFK.HasValue ?
                new ObjectParameter("UserFK", userFK) :
                new ObjectParameter("UserFK", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("customerID", customerID) :
                new ObjectParameter("customerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransactionByCustomerIDandDateRange_Result>("GetTransactionByCustomerIDandDateRange", userFKParameter, startDateParameter, endDateParameter, customerIDParameter);
        }
    
        public virtual ObjectResult<GetTransactionLog4Partners_Result> GetTransactionLog4Partners(Nullable<int> userFK)
        {
            var userFKParameter = userFK.HasValue ?
                new ObjectParameter("UserFK", userFK) :
                new ObjectParameter("UserFK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransactionLog4Partners_Result>("GetTransactionLog4Partners", userFKParameter);
        }
    
        public virtual ObjectResult<GetTransactionLog4PartnersByDate_Result> GetTransactionLog4PartnersByDate(Nullable<int> userFK, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> merchantID)
        {
            var userFKParameter = userFK.HasValue ?
                new ObjectParameter("UserFK", userFK) :
                new ObjectParameter("UserFK", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransactionLog4PartnersByDate_Result>("GetTransactionLog4PartnersByDate", userFKParameter, startDateParameter, endDateParameter, merchantIDParameter);
        }
    
        public virtual ObjectResult<GetUserAccess4Page_Result> GetUserAccess4Page(string pageName, Nullable<int> userID)
        {
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserAccess4Page_Result>("GetUserAccess4Page", pageNameParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetVendTransLog4PartnersByDate_Result> GetVendTransLog4PartnersByDate(Nullable<int> userFK, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userFKParameter = userFK.HasValue ?
                new ObjectParameter("UserFK", userFK) :
                new ObjectParameter("UserFK", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVendTransLog4PartnersByDate_Result>("GetVendTransLog4PartnersByDate", userFKParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int UpdateAgentUser(Nullable<double> myTimer, string myTokenVal, string agentID, Nullable<int> recID)
        {
            var myTimerParameter = myTimer.HasValue ?
                new ObjectParameter("myTimer", myTimer) :
                new ObjectParameter("myTimer", typeof(double));
    
            var myTokenValParameter = myTokenVal != null ?
                new ObjectParameter("myTokenVal", myTokenVal) :
                new ObjectParameter("myTokenVal", typeof(string));
    
            var agentIDParameter = agentID != null ?
                new ObjectParameter("agentID", agentID) :
                new ObjectParameter("agentID", typeof(string));
    
            var recIDParameter = recID.HasValue ?
                new ObjectParameter("RecID", recID) :
                new ObjectParameter("RecID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAgentUser", myTimerParameter, myTokenValParameter, agentIDParameter, recIDParameter);
        }
    
        public virtual int UpdateTransacionLogToken(string referenceNumber, string accountNumber, string serviceValueDetails1, string serviceValueDetails2, string serviceValueDetails3, string responseBody, ObjectParameter recID)
        {
            var referenceNumberParameter = referenceNumber != null ?
                new ObjectParameter("ReferenceNumber", referenceNumber) :
                new ObjectParameter("ReferenceNumber", typeof(string));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var serviceValueDetails1Parameter = serviceValueDetails1 != null ?
                new ObjectParameter("ServiceValueDetails1", serviceValueDetails1) :
                new ObjectParameter("ServiceValueDetails1", typeof(string));
    
            var serviceValueDetails2Parameter = serviceValueDetails2 != null ?
                new ObjectParameter("ServiceValueDetails2", serviceValueDetails2) :
                new ObjectParameter("ServiceValueDetails2", typeof(string));
    
            var serviceValueDetails3Parameter = serviceValueDetails3 != null ?
                new ObjectParameter("ServiceValueDetails3", serviceValueDetails3) :
                new ObjectParameter("ServiceValueDetails3", typeof(string));
    
            var responseBodyParameter = responseBody != null ?
                new ObjectParameter("ResponseBody", responseBody) :
                new ObjectParameter("ResponseBody", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransacionLogToken", referenceNumberParameter, accountNumberParameter, serviceValueDetails1Parameter, serviceValueDetails2Parameter, serviceValueDetails3Parameter, responseBodyParameter, recID);
        }
    
        public virtual int UpdateTransacionRecordToken(string referenceNumber, string accountNumber, string serviceValueDetails1, string serviceValueDetails2, string serviceValueDetails3, string responseBody, ObjectParameter recID)
        {
            var referenceNumberParameter = referenceNumber != null ?
                new ObjectParameter("ReferenceNumber", referenceNumber) :
                new ObjectParameter("ReferenceNumber", typeof(string));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var serviceValueDetails1Parameter = serviceValueDetails1 != null ?
                new ObjectParameter("ServiceValueDetails1", serviceValueDetails1) :
                new ObjectParameter("ServiceValueDetails1", typeof(string));
    
            var serviceValueDetails2Parameter = serviceValueDetails2 != null ?
                new ObjectParameter("ServiceValueDetails2", serviceValueDetails2) :
                new ObjectParameter("ServiceValueDetails2", typeof(string));
    
            var serviceValueDetails3Parameter = serviceValueDetails3 != null ?
                new ObjectParameter("ServiceValueDetails3", serviceValueDetails3) :
                new ObjectParameter("ServiceValueDetails3", typeof(string));
    
            var responseBodyParameter = responseBody != null ?
                new ObjectParameter("ResponseBody", responseBody) :
                new ObjectParameter("ResponseBody", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransacionRecordToken", referenceNumberParameter, accountNumberParameter, serviceValueDetails1Parameter, serviceValueDetails2Parameter, serviceValueDetails3Parameter, responseBodyParameter, recID);
        }
    }
}
